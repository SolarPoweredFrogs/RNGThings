from PIL import Image

Seedstr = input('Enter Feebas Seed: ')
Seed = int(Seedstr, 16)

def FRNGAdvance(x):
	MULT = 0x41c64e6d
	ADD = 12345
	return (x * MULT + ADD) % 0x100000000

def H16(x):
	return x >> 16

Tiles = []

while len(Tiles) < 6:
	Seed = FRNGAdvance(Seed)
	NewTile = (H16(Seed) % 447) + 1
	if Tiles.count(NewTile) == 0:
		Tiles.append(NewTile)

Tiles.sort()
print(Tiles)

#Section 1: tiles 1-298, horiz offset 16, vert offset 18
T1 = [[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[0, 0, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[0, 8, 9, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[0, 11, 12, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[0, 14, 15, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[0, 17, 18, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[0, 23, 24, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[26, 27, 28, 29, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[31, 32, 33, 34, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[36, 37, 38, 39, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[41, 42, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[46, 47, 48, 49, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[51, 52, 53, 54, 55, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[56, 57, 58, 59, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[61, 62, 63, 64, 65, 66, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[68, 69, 70, 71, 72, 73, 74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[75, 76, 77, 78, 79, 80, 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[82, 83, 84, 85, 86, 87, 88, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[89, 90, 91, 92, 93, 94, 95, 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 0, 0, 0],
[0, 0, 0, 0, 0, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 0, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 148, 149, 150, 151, 152, 153, 154, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 155, 156, 157, 158, 159, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 160, 161, 162, 163, 164],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 165, 166, 167, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 168, 169, 170, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 171, 172, 173, 174, 175],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 176, 177, 178, 179, 180],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 181, 182, 183],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 184, 185, 186],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 187, 188, 189, 190, 191],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 192, 193, 194, 195, 196],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 197, 198, 199, 200, 201, 202],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 203, 204, 205, 206, 207, 208, 209, 210, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 211, 212, 213, 214, 215, 216, 217, 218, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 219, 220, 221, 222, 223, 224, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 225, 226, 227, 228, 229, 230, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 231, 232, 233, 234, 235, 236, 237, 0, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 238, 239, 240, 241, 242, 243, 0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 244, 245, 246, 247, 248, 0, 0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0, 249, 250, 251, 252, 253, 254, 255, 0, 0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0, 256, 257, 258, 259, 260, 261, 262, 0, 0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0, 263, 264, 265, 266, 267, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 268, 269, 270, 271, 272, 273, 274, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 275, 276, 277, 278, 279, 280, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 281, 282, 283, 284, 285, 286, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 287, 288, 289, 290, 291, 292, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 293, 294, 295, 296, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 297, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 298, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]

#Section 2: Tiles 299-447, horiz offset 7, vert offset 98
T2 = [[0, 0, 0, 0, 0, 0, 0, 299, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 300, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 301, 302, 303, 0, 0, 304, 305, 0, 0, 306, 307, 0],
[0, 0, 0, 0, 0, 0, 0, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 0],
[0, 0, 0, 0, 0, 0, 0, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 0],
[0, 0, 0, 0, 0, 0, 0, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 0],
[0, 0, 0, 0, 0, 0, 0, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352],
[0, 0, 0, 0, 0, 0, 0, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364],
[0, 0, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 0, 0, 377, 378, 379],
[380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 0, 0, 394, 395, 396],
[0, 0, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413],
[0, 0, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 0, 0],
[0, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 0, 0, 0, 0, 0, 0],
[0, 441, 442, 443, 444, 445, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[446, 447, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]

R = []
C = []

for i in range(0,6):
	T = Tiles[i]
	if T < 299:
		for j in range(0,len(T1)):
			V = T1[j]
			if V.count(T) > 0:
				R.append(j+18)
				C.append(V.index(T)+16)
	else:
		for j in range(0,len(T2)):
			V = T2[j]
			if V.count(T) > 0:
				R.append(j+98)
				C.append(V.index(T)+7)

IMG = Image.open('Rt119.png')
Pixels = IMG.load()
for i in range(0,6):
	TR = R[i]
	TC = C[i]
	for j in range(0,16):
		for k in range(0,16):
			Pixels[16*TC+j,16*TR+k] = (0,0,0)
IMG.show()

Fname = Seedstr + ' Tiles.png'
SaveString = 'Save image as ' + Fname + '? (y/n, default n)'
AskToSave = input(SaveString)
if (AskToSave == 'Y') or (AskToSave == 'y'):
	IMG.save(Fname,'PNG')